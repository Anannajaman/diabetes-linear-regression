# -*- coding: utf-8 -*-
"""Welcome To Colab

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/notebooks/intro.ipynb
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score, confusion_matrix

import pandas as pd

df = pd.read_csv('diabetes.csv')  # Now it will find the file
df.head()

df = pd.read_csv('diabetes.csv')
df.head()

cols = ['Glucose', 'BloodPressure', 'SkinThickness', 'Insulin', 'BMI']
df[cols] = df[cols].replace(0, np.nan)

# Fill missing values with mean
df.fillna(df.mean(numeric_only=True), inplace=True)

# Replace 1st row's glucose with max
df.at[0, 'Glucose'] = df['Glucose'].max()

# Replace glucose of minimum age rows with glucose min
min_age = df['Age'].min()
df.loc[df['Age'] == min_age, 'Glucose'] = df['Glucose'].min()

X = df.drop('Outcome', axis=1)
y = df['Outcome']

# Train-Test Split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=42)

model = LinearRegression()
model.fit(X_train, y_train)

# Predict and Round
y_pred_prob = model.predict(X_test)
y_pred = [1 if val >= 0.5 else 0 for val in y_pred_prob]

acc = accuracy_score(y_test, y_pred)
prec = precision_score(y_test, y_pred)
rec = recall_score(y_test, y_pred)
f1 = f1_score(y_test, y_pred)
cm = confusion_matrix(y_test, y_pred)

print("âœ… Evaluation Results")
print(f"Accuracy  : {acc:.4f}")
print(f"Precision : {prec:.4f}")
print(f"Recall    : {rec:.4f}")
print(f"F1 Score  : {f1:.4f}")
print("Confusion Matrix:")
print(cm)